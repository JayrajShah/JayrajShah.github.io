{"version":3,"sources":["assets/pic.png","components/navbar.js","components/About.js","components/ScrollReveal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","backdrop","color","navContainerWrapper","height","position","width","zIndex","navContainer","display","justifyContent","alignItems","paddingTop","navListItem","fontFamily","fontSize","cursor","navListMenuItem","marginTop","hamIcon","padding","top","right","sideMenu","backgroundColor","clipPath","transition","Navbar","classes","navList","useState","setPageOffset","menuOpen","setMenuOpen","backdropOpen","setBackdropOpen","useEffect","window","addEventListener","pageYOffset","handleClick","event","item","pageHeight","innerHeight","scrollTo","open","className","Fade","in","Container","style","map","ButtonBase","key","centerRipple","disableRipple","onClick","toUpperCase","Grid","container","justify","IconButton","aria-label","margin","Backdrop","direction","spacing","index","About","Typography","variant","ScrollReveal","themex","createMuiTheme","typography","join","title","breakpoints","down","name","letterSpacing","designation","App","config","origin","duration","distance","scale","easing","reveal","Object","assign","delay","src","pic","alt","Button","size","borderColor","borderRadius","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7ec49908.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic.19481eba.png\";","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  ButtonBase,\r\n  Grid,\r\n  IconButton,\r\n  Backdrop,\r\n  Typography,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    color: \"#fff\",\r\n  },\r\n  navContainerWrapper: {\r\n    height: \"8vh\",\r\n    position: \"fixed\",\r\n    width: \"100%\",\r\n    zIndex: 3,\r\n  },\r\n  navContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    paddingTop: \"1em\",\r\n    // zIndex: 0,\r\n  },\r\n  navListItem: {\r\n    fontFamily: \"Oswald\",\r\n    fontSize: \"3.5vh\",\r\n    cursor: \"pointer\",\r\n    color: \"#efefef\",\r\n    \"&:hover\": {\r\n      color: \"#FBD630\",\r\n    },\r\n  },\r\n  navListMenuItem: {\r\n    marginTop: \"10vh\",\r\n    fontFamily: \"Oswald\",\r\n    fontSize: \"2.5vh\",\r\n    cursor: \"pointer\",\r\n    color: \"#242424\",\r\n    zIndex: 3,\r\n  },\r\n  hamIcon: {\r\n    padding: \"0.5rem\",\r\n    zIndex: 3,\r\n    top: 0,\r\n    right: 0,\r\n    position: \"absolute\",\r\n  },\r\n  sideMenu: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: 0,\r\n    width: \"30em\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#FBD630\",\r\n    clipPath: \"circle(0vw at 100% 0)\",\r\n    transition: \"all 0.7s ease\",\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const navList = [\"about\", \"contact\", \"resume\"];\r\n  const [pageOffset, setPageOffset] = useState(0);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [backdropOpen, setBackdropOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      setPageOffset(window.pageYOffset);\r\n    });\r\n  }, []);\r\n  //Handlers\r\n  const handleClick = (event, item) => {\r\n    let pageHeight;\r\n    switch (item) {\r\n      case \"about\":\r\n        pageHeight = window.innerHeight;\r\n        window.scrollTo(0, pageHeight);\r\n        break;\r\n      case \"contact\":\r\n        pageHeight = window.innerHeight;\r\n        window.scrollTo(0, pageHeight + pageHeight);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (item === \"resume\") {\r\n      window.open(\"/resume.pdf\", \"_blank\");\r\n    }\r\n  };\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);\r\n    setBackdropOpen(!backdropOpen);\r\n  };\r\n\r\n  //Components\r\n  const OpenBackdrop = () => {\r\n    return <Backdrop className={classes.backdrop} open={backdropOpen} />;\r\n  };\r\n\r\n  const sideMenu = () => {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        spacing={1}\r\n        className={classes.sideMenu}\r\n        style={{ clipPath: `circle(${menuOpen ? \"30\" : \"0\"}em at 100% 0)` }}\r\n      >\r\n        {navList.map((item, index) => (\r\n          <Grid item container justify=\"center\" key={item + `${index}`}>\r\n            <ButtonBase\r\n              centerRipple={false}\r\n              disableRipple={true}\r\n              className={classes.navListMenuItem}\r\n              onClick={(event) => {\r\n                handleClick(event, item);\r\n                setMenuOpen(false);\r\n                setBackdropOpen(false);\r\n              }}\r\n            >\r\n              {item.toUpperCase()}\r\n            </ButtonBase>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.navContainerWrapper}>\r\n      <Fade in={window.pageYOffset < 100}>\r\n        <Container\r\n          className={classes.navContainer}\r\n          style={{\r\n            //display: window.pageYOffset < 100 ? \"\" : \"none\",\r\n            transition: \"all 5s \",\r\n          }}\r\n        >\r\n          {navList.map((item) => (\r\n            <ButtonBase\r\n              key={item}\r\n              centerRipple={false}\r\n              disableRipple={true}\r\n              className={classes.navListItem}\r\n              onClick={(event) => handleClick(event, item)}\r\n            >\r\n              {item.toUpperCase()}\r\n            </ButtonBase>\r\n          ))}\r\n        </Container>\r\n      </Fade>\r\n      <Fade in={window.pageYOffset >= 100}>\r\n        <Grid container justify=\"flex-end\" className={classes.hamIcon}>\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            className={classes.margin}\r\n            onClick={toggleMenu}\r\n          >\r\n            {menuOpen ? (\r\n              <CloseIcon fontSize=\"large\" style={{ color: \"#242424\" }} />\r\n            ) : (\r\n              <MenuIcon fontSize=\"large\" style={{ color: \"#FBD630\" }} />\r\n            )}\r\n          </IconButton>\r\n        </Grid>\r\n      </Fade>\r\n\r\n      {OpenBackdrop()}\r\n      {sideMenu()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nimport { Typography, Grid, makeStyles, Button } from \"@material-ui/core\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      style={{ height: \"100vh\", backgroundColor: \"#242424\" }}\r\n    >\r\n      <Typography variant=\"body\" style={{ color: \"#FBD630\" }}>\r\n        Section yet to be made\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import ScrollReveal from \"scrollreveal\";\r\nexport default ScrollReveal();\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport pic from \"./assets/pic.png\";\nimport Navbar from \"./components/navbar\";\nimport About from \"./components/About\";\nimport ScrollReveal from \"./components/ScrollReveal\";\n\nimport {\n  Typography,\n  MuiThemeProvider,\n  createMuiTheme,\n  Grid,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\n\nconst themex = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Raleway\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    margin: \"10%\",\n    [theme.breakpoints.down(\"md\")]: {\n      paddingTop: \"8vh\",\n    },\n  },\n  name: {\n    fontFamily: \"Anton\",\n    color: \"#FBD630\",\n    letterSpacing: \"0.1em\",\n    fontSize: \"8vw\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: `13vw`,\n    },\n  },\n  designation: {\n    fontFamily: \"Anton\",\n    color: \"#efefef\",\n    letterSpacing: \"0.32em\",\n    fontSize: \"3vw\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"4vw\",\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  useEffect(() => {\n    const config = {\n      origin: \"bottom\",\n      duration: 1000,\n      distance: \"10px\",\n      scale: 1,\n      easing: \"ease\",\n    };\n    ScrollReveal.reveal(\n      `.${classes.name}`,\n      Object.assign({ delay: 50 }, config)\n    );\n    ScrollReveal.reveal(\n      `.${classes.designation}`,\n      Object.assign({ delay: 250 }, config)\n    );\n  }, []);\n  return (\n    <MuiThemeProvider theme={themex}>\n      <Grid style={{ backgroundColor: \"#242424\", height: \"100vh\" }}>\n        <Navbar />\n        <Grid className=\"landing-container\">\n          <Grid item className=\"jay-container\">\n            <img src={pic} className=\"jay-pic\" alt=\"logo\" />\n          </Grid>\n          <Grid item className={classes.title}>\n            <Typography className={classes.name}>JAYRAJ SHAH</Typography>\n            <Typography className={classes.designation}>\n              DEVELOPER & DESIGNER\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          className=\"scroll-btn\"\n        >\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            style={{\n              fontFamily: \"Anton\",\n              letterSpacing: \"1px\",\n              color: \"#242424\",\n              borderColor: \"#FBD630\",\n              borderRadius: \"50px\",\n              backgroundColor: \"#FBD630\",\n            }}\n          >\n            MORE\n          </Button>\n        </Grid>\n      </Grid>\n      <About />\n      <About />\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}